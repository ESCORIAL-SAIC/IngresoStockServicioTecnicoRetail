// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;

namespace IngresoStockServicioTecnicoRetail.Models;

public partial class ESCORIALContext : DbContext
{
    public ESCORIALContext()
    {
    }

    public ESCORIALContext(DbContextOptions<ESCORIALContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Solitudcambioretailpicking> Solitudcambioretailpickings { get; set; }

    public virtual DbSet<VItemsolicitud> VItemsolicituds { get; set; }

    public virtual DbSet<VProducto> VProductos { get; set; }

    public virtual DbSet<VTrsolicitud> VTrsolicituds { get; set; }

    public virtual DbSet<VUdItemsolreparacionretail> VUdItemsolreparacionretails { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        if (!optionsBuilder.IsConfigured)
        {
            var connectionString = Program.Configuration.GetConnectionString("DefaultConnection");
            optionsBuilder.UseNpgsql(connectionString);
        }
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .HasPostgresExtension("fuzzystrmatch")
            .HasPostgresExtension("hstore")
            .HasPostgresExtension("ltree")
            .HasPostgresExtension("pg_stat_statements")
            .HasPostgresExtension("pgstattuple")
            .HasPostgresExtension("unaccent");

        modelBuilder.Entity<Solitudcambioretailpicking>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("solitudcambioretailpicking_pkey");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.ProcesadoCalipso).HasDefaultValue(false);
        });

        modelBuilder.Entity<VItemsolicitud>(entity =>
        {
            entity.ToView("v_itemsolicitud");
        });

        modelBuilder.Entity<VProducto>(entity =>
        {
            entity.ToView("v_producto");
        });

        modelBuilder.Entity<VTrsolicitud>(entity =>
        {
            entity.ToView("v_trsolicitud");
        });

        modelBuilder.Entity<VUdItemsolreparacionretail>(entity =>
        {
            entity.ToView("v_ud_itemsolreparacionretail");
        });
        modelBuilder.HasSequence("aux_suceso_inc_seq");
        modelBuilder.HasSequence("hibernate_sequence", "web");

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}